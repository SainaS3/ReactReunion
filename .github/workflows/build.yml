name: Build React Native App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Clean build folder
      run: xcodebuild clean -workspace ios/ReactReunion.xcworkspace -scheme ReactReunion

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Watchman
      run: brew install watchman

    - name: Install dependencies
      run: npm install

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0' # Adjust the Ruby version as needed

    - name: Remove node_modules
      run: rm -rf node_modules

    - name: Reinstall npm dependencies
      run: npm install

    - name: Install CocoaPods
      run: sudo gem install cocoapods

    - name: Install dependencies
      run: pod install --project-directory=ios

    - name: Setup keychain
      run: |
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
      shell: bash

    - name: Import certificate
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
      run: |
        echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PASSWORD -T /usr/bin/codesign

    - name: Build Mac Catalyst app
      working-directory: ios
      run: xcodebuild -workspace ReactReunion.xcworkspace -scheme ReactReunion -sdk iphoneos -destination 'platform=macOS,variant=Mac Catalyst'

    - name: Fail if previous step failed
      if: failure()
      run: exit 1

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        Invoke-WebRequest -Uri https://community.chocolatey.org/install.ps1 -UseBasicParsing | Invoke-Expression

    - name: Ensure Visual Studio Components
      run: |
        $components = @(
            'Microsoft.Component.MSBuild',
            'Microsoft.VisualStudio.Component.VC.Tools.x86.x64',
            'Microsoft.VisualStudio.ComponentGroup.UWP.Support',
            'Microsoft.VisualStudio.ComponentGroup.NativeDesktop.Core',
            'Microsoft.VisualStudio.Component.Windows10SDK.19041',
            'Microsoft.VisualStudio.Component.Windows11SDK.22621',
            'Microsoft.VisualStudio.ComponentGroup.UWP.VC',
            'Microsoft.VisualStudio.Workload.ManagedDesktop',
            'Microsoft.VisualStudio.Workload.NativeDesktop',
            'Microsoft.VisualStudio.Workload.Universal'
        )
        $components = $components -join ','
        choco install visualstudio2022buildtools --params "'--add $components --includeRecommended --quiet --wait'"

    - name: Enable Developer Mode
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        $RegistryKeyPath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock"
        if (-not (Test-Path -Path $RegistryKeyPath)) {
          New-Item -Path $RegistryKeyPath -ItemType Directory -Force
        }
        Set-ItemProperty -Path $RegistryKeyPath -Name AllowDevelopmentWithoutDevLicense -Value 1 -Type DWord

    - name: Enable Long Paths
      run: Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -Type DWord

    - name: Install Yarn
      run: choco install yarn

    - name: Install MSBuild Log Viewer
      run: choco install msbuild-structured-log-viewer

    - name: Install .NET SDK
      run: choco install dotnet-6.0-sdk-4xx

    - name: Install CppWinRT VSIX
      run: |
        $url = "https://marketplace.visualstudio.com/_apis/public/gallery/publishers/CppWinRTTeam/vsextensions/cppwinrt101804264/2.0.210304.5/vspackage"
        Write-Verbose "Downloading CppWinRT VSIX from $url"
        Invoke-WebRequest -UseBasicParsing $url -OutFile $env:TEMP\Microsoft.Windows.CppWinRT.vsix
        $vsWherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
        $vsInstallPath = & $vsWherePath -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
        $vsixInstaller = "$vsInstallPath\Common7\IDE\VSIXInstaller.exe"
        Start-Process -FilePath $vsixInstaller -ArgumentList "/a /q $env:TEMP\Microsoft.Windows.CppWinRT.vsix" -NoNewWindow -Wait

    - name: Build UWP app
      run: |
        cd windows
        npx react-native run-windows --release

    - name: Fail if previous step failed
      if: failure()
      run: exit 1
